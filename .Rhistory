reg_links <- sapply(reg_webs,NumberOfTrophicLinks)
reg_nodes <- sapply(reg_webs,NumberOfNodes)
plot(reg_nodes,reg_links)
data <- data.frame(links = reg_links, nodes = reg_nodes)
reg.model <- lm(log(links) ~ log(nodes),data = data)
exp(coefficients(reg.model))
(coefficients(reg.model))
(coefficients(reg.model))[1]
data$pred <- (data$nodes*coefficients(reg.model)[2]) + coefficients(reg.model)[1]
plot(data$nodes,data$links)
plot(data$nodes,data$links)
plot(data$nodes,data$pred)
plot(log(data$nodes),log(data$links))
plot(data$nodes,data$pred)
#Preform regression without LS webs (non-LS and Taxanomic) using Log(S) + Log(N)
taxa_webs <- LS_webs[sapply(LS_webs,FUN = function(x) x$properties$LS == "Taxa")]
reg_webs <- c(taxa_webs,non_LS_webs)
reg_links <- sapply(reg_webs,NumberOfTrophicLinks)
reg_nodes <- sapply(reg_webs,NumberOfNodes)
plot(reg_nodes,reg_links)
data <- data.frame(links = log(reg_links), nodes = log(reg_nodes))
plot(data)
##############
# Analysis of Life History Webs for
# Clegg, Ali and Beckerman 2018: The Impact of Intraspecific Variation on Food Web Structure
##############
# Doi:
# Last edited 29.01.2017
# Copyright (c) 2017 the authors
##############
# Preparation ect.
# Clear workspace
rm(list = ls())
#Loading Packages
library(cheddar)
library(ggplot2)
library(tidyverse)
library(reshape2)
#Loading LS webs
LS_paths <- paste0("./Data/LS_Webs/",list.files("./Data/LS_Webs/"))
LS_webs <- vector("list", length(LS_paths))
for(i in 1:length(LS_paths)){
LS_webs[[i]] <- LoadCommunity(LS_paths[i])
}
#Loading non-LS webs
non_LS_paths <- paste0("./Data/Non_LS_Webs/",list.files("./Data/Non_LS_Webs/"))
non_LS_webs <- vector("list", length(non_LS_paths))
for(i in 1:length(non_LS_paths)){
non_LS_webs[[i]] <- LoadCommunity(non_LS_paths[i])
}
#Preform regression without LS webs (non-LS and Taxanomic) using Log(S) + Log(N)
taxa_webs <- LS_webs[sapply(LS_webs,FUN = function(x) x$properties$LS == "Taxa")]
reg_webs <- c(taxa_webs,non_LS_webs)
reg_links <- sapply(reg_webs,NumberOfTrophicLinks)
reg_nodes <- sapply(reg_webs,NumberOfNodes)
data <- data.frame(links = log(reg_links), nodes = log(reg_nodes))
plot(data)
reg.model <- lm(links ~ nodes,data = data)
summary(reg.model)
plot(reg.model)
#Preform regression without LS webs (non-LS and Taxanomic) using Log(S) + Log(N)
taxa_webs <- LS_webs[sapply(LS_webs,FUN = function(x) x$properties$LS == "Taxa")]
reg_webs <- c(taxa_webs,non_LS_webs)
reg_links <- sapply(reg_webs,NumberOfTrophicLinks)
reg_nodes <- sapply(reg_webs,NumberOfNodes)
data <- data.frame(links = log(reg_links), nodes = log(reg_nodes))
plot(data)
reg.model <- lm(links ~ nodes,data = data)
summary(reg.model)
data$pred <- (data$nodes*coefficients(reg.model)[2]) + coefficients(reg.model)[1]
plot(log(data$nodes),log(data$links))
plot(data$nodes,data$pred)
plot(data)
#Preform regression without LS webs (non-LS and Taxanomic) using Log(S) + Log(N)
taxa_webs <- LS_webs[sapply(LS_webs,FUN = function(x) x$properties$LS == "Taxa")]
reg_webs <- c(taxa_webs,non_LS_webs)
reg_links <- sapply(reg_webs,NumberOfTrophicLinks)
reg_nodes <- sapply(reg_webs,NumberOfNodes)
data <- data.frame(links = log(reg_links), nodes = log(reg_nodes))
plot(data)
summary(reg.model)
predict(reg.model,newdata = data$nodes)
predict(reg.model,newdata = data$nodes)
predict(reg.model)
plot(data$nodes,predict(reg.model))
plot(data$nodes,predict(reg.model),type = 'l')
plot(data)
points(data$nodes,data$links)
points(data$nodes,data$links)
reg.model <- lm(links ~ nodes,data = data)
plot(data$nodes,predict(reg.model),type = 'l')
points(data$nodes,data$links)
line(data$nodes,predict(reg.model))
plot(data$nodes,data$links)
lines(data$nodes,predict(reg.model))
#Loading Packages
library(cheddar)
library(ggplot2)
library(tidyverse)
library(reshape2)
#Loading LS webs
LS_paths <- paste0("./Data/LS_Webs/",list.files("./Data/LS_Webs/"))
LS_webs <- vector("list", length(LS_paths))
for(i in 1:length(LS_paths)){
LS_webs[[i]] <- LoadCommunity(LS_paths[i])
}
#Loading non-LS webs
non_LS_paths <- paste0("./Data/Non_LS_Webs/",list.files("./Data/Non_LS_Webs/"))
non_LS_webs <- vector("list", length(non_LS_paths))
for(i in 1:length(non_LS_paths)){
non_LS_webs[[i]] <- LoadCommunity(non_LS_paths[i])
}
#Get DF with Nodes and Links
sapply(LS_webs,NumberOfNodes)
#Get DF with Nodes and Links
c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes))
#Get DF with Nodes and Links
N <- c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes))
L <- c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks))
sapply(LS_webs,function(X) x$properties$title)
c(sapply(LS_webs,function(x) x$properties$title))
#Get DF with Nodes and Links
N <- c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes))
L <- c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks))
names <- c(sapply(LS_webs,function(x) x$properties$title),sapply(non_LS_webs,function(x) x$properties$title))
NL_all <- data.frame(names = names, nodes = N, L = links)
NL_all <- data.frame(names = names, nodes = N, links = l)
#Get DF with Nodes and Links
N <- c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes))
L <- c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks))
names <- c(sapply(LS_webs,function(x) x$properties$title),sapply(non_LS_webs,function(x) x$properties$title))
NL_all <- data.frame(names = names, nodes = N, links = L)
View(NL_all)
LS <- c(sapply(LS_webs,function(x) x$properties$LS),rep("other",length(non_LS_webs)))
LS
#Get DF with Nodes and Links
N <- c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes))
L <- c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks))
names <- c(sapply(LS_webs,function(x) x$properties$title),sapply(non_LS_webs,function(x) x$properties$title))
LS <- c(sapply(LS_webs,function(x) x$properties$LS),rep("other",length(non_LS_webs)))
NL_all <- data.frame(names = names,LS = LS, nodes = N, links = L)
View(NL_all)
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = LS))+geom_point()
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = LS))+
geom_point()+
scale_y_log10() + scale_x_log10()
#Preform regression without LS webs (non-LS and Taxanomic) using Log(S) + Log(N)
taxa_webs <- LS_webs[sapply(LS_webs,FUN = function(x) x$properties$LS == "Taxa")]
LS
non_LS_webs
LS_webs
LS
LS_webs
sapply(LS_webs,function(x) x$properties$title)
gsub(" Lifestage| Taxanomic",sapply(LS_webs,function(x) x$properties$title))
Web <- gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title))
Web
Web <- c(gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title)),
rep("other",length(non_LS_webs)))
#Get DF with Nodes and Links
Nodes <- c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes))
Links <- c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks))
names <- c(sapply(LS_webs,function(x) x$properties$title),sapply(non_LS_webs,function(x) x$properties$title))
LS <- c(sapply(LS_webs,function(x) x$properties$LS),rep("other",length(non_LS_webs)))
Web <- c(gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title)),
rep("other",length(non_LS_webs)))
NL_all <- data.frame(names = names,web = Web ,LS = LS, nodes = N, links = L)
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = LS))+
geom_point()+
scale_y_log10() + scale_x_log10()
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = LS, group =web))+
geom_point()+
scale_y_log10() + scale_x_log10()
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
scale_y_log10() + scale_x_log10()
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line()+
scale_y_log10() + scale_x_log10()
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_line(data = NL_all[NL_all$web != "other")+
#Preform regression without LS webs (non-LS and Taxanomic) using Log(S) + Log(N)
taxa_webs <- LS_webs[sapply(LS_webs,FUN = function(x) x$properties$LS == "Taxa")]
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web] != "other")+
scale_y_log10() + scale_x_log10()
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other"])+
scale_y_log10() + scale_x_log10()
NL_all[NL_all$web != "other"]
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_y_log10() + scale_x_log10()
names(cbPalette)[1:5]
#defining colour vars
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
names(cbPalette)
Web[1:5]
names(cbPalette) <- c(Web[1:5],"other")
cbPalette
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_y_log10() + scale_x_log10()+
scale_color_manual(values = cVect)
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_y_log10() + scale_x_log10()+
scale_color_manual(values = cbPalette)
#defining colour vars
cbPalette <- c("#D55E00", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
names(cbPalette) <- c(Web[1:5],"other")
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_y_log10() + scale_x_log10()+
scale_color_manual(values = cbPalette)
Web[1:5]
sapply(LS_webs,function(x) x$properties$title)
gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title))
Web <- c(gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title)),
rep("other",length(non_LS_webs)))
Web
unique(Web[1:10])
c(unique(Web))
#defining colour vars
cbPalette <- c("#D55E00", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
names(cbPalette) <- (unique(Web)
names(cbPalette) <- (unique(Web))
#defining colour vars
cbPalette <- c("#D55E00", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
names(cbPalette) <- (unique(Web))
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_y_log10() + scale_x_log10()+
scale_color_manual(values = cbPalette)
#defining colour vars
cbPalette <- c("#D55E00", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
names(cbPalette) <- (unique(Web))
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_y_log10() + scale_x_log10()+
scale_color_manual(values = cbPalette)
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_y_log10() + scale_x_log10()+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
#Preform regression without LS webs (non-LS and Taxanomic) using Log(S) + Log(N)
taxa_webs <- LS_webs[sapply(LS_webs,FUN = function(x) x$properties$LS == "Taxa")]
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_y_log10() + scale_x_log10()+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())
#plotting
ggplot(NL_all,aes(x = nodes, y = links, colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())
#plotting
ggplot(NL_all,aes(x = log(nodes), y = log(links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())
View(NL_all)
NL_all[NL_all$LS != "LS"]
NL_all[NL_all$LS != "LS",]
reg_data_1 <- NL_all[NL_all$LS != "LS",]
reg_data <- NL_all[NL_all$LS != "LS",]
reg_data$links <- log(reg_data$links)
plot(reg_data$nodes,reg_data$links)
#Get DF with Nodes and Links
Nodes <- c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes))
Links <- c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks))
names <- c(sapply(LS_webs,function(x) x$properties$title),sapply(non_LS_webs,function(x) x$properties$title))
LS <- c(sapply(LS_webs,function(x) x$properties$LS),rep("other",length(non_LS_webs)))
Web <- c(gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title)),
rep("other",length(non_LS_webs)))
NL_all <- data.frame(names = names,web = Web ,LS = LS, nodes = N, links = L)
#Regression
#Log(link) ~ log(Nodes)
reg_data <- NL_all[NL_all$LS != "LS",]
##############
# Analysis of Life History Webs for
# Clegg, Ali and Beckerman 2018: The Impact of Intraspecific Variation on Food Web Structure
##############
# Doi:
# Last edited 29.01.2017
# Copyright (c) 2017 the authors
##############
# Preparation ect.
# Clear workspace
rm(list = ls())
#Loading Packages
library(cheddar)
library(ggplot2)
library(tidyverse)
library(reshape2)
#Loading LS webs
LS_paths <- paste0("./Data/LS_Webs/",list.files("./Data/LS_Webs/"))
LS_webs <- vector("list", length(LS_paths))
for(i in 1:length(LS_paths)){
LS_webs[[i]] <- LoadCommunity(LS_paths[i])
}
#Loading non-LS webs
non_LS_paths <- paste0("./Data/Non_LS_Webs/",list.files("./Data/Non_LS_Webs/"))
non_LS_webs <- vector("list", length(non_LS_paths))
for(i in 1:length(non_LS_paths)){
non_LS_webs[[i]] <- LoadCommunity(non_LS_paths[i])
}
#Get DF with Nodes and Links
Nodes <- c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes))
Links <- c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks))
names <- c(sapply(LS_webs,function(x) x$properties$title),sapply(non_LS_webs,function(x) x$properties$title))
LS <- c(sapply(LS_webs,function(x) x$properties$LS),rep("other",length(non_LS_webs)))
Web <- c(gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title)),
rep("other",length(non_LS_webs)))
NL_all <- data.frame(names = names,web = Web ,LS = LS, nodes = N, links = L)
#Get DF with Nodes and Links
Nodes <- c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes))
Links <- c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks))
names <- c(sapply(LS_webs,function(x) x$properties$title),sapply(non_LS_webs,function(x) x$properties$title))
LS <- c(sapply(LS_webs,function(x) x$properties$LS),rep("other",length(non_LS_webs)))
Web <- c(gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title)),
rep("other",length(non_LS_webs)))
NL_all <- data.frame(names = names,web = Web ,LS = LS, nodes = Nodes, links = Links)
#Regression
#Log(link) ~ log(Nodes)
reg_data <- NL_all[NL_all$LS != "LS",]
reg_data$nodes <- log(reg_data$nodes)
reg_data$links <- log(reg_data$links)
plot(reg_data$nodes,reg_data$links)
lm(nodes~links,data = reg_data)
lm(links~nodes,data = reg_data)
exp(1.759)
exp(1.125)
NL_model <- lm(links~nodes,data = reg_data)
plot(NL_model)
coefficients(NL_model)
predict(NL_model)
reg_data$pred <- predict(NL_model)
ggplot(NL_all,aes(x = log(nodes), y = log(links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred))
#plotting
#defining colour vars
cbPalette <- c("#D55E00", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
names(cbPalette) <- (unique(Web))
ggplot(NL_all,aes(x = log(nodes), y = log(links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred))
#Regression
#Log(link) ~ log(Nodes)
reg_data <- NL_all[NL_all$LS != "LS",]
reg_data
reg_data$nodes <- log(reg_data$nodes)
reg_data$links <- log(reg_data$links)
reg_data
NL_all
log
log(links)
log(NL_all$links)
#Get DF with Nodes and Links
Nodes <- log(c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes)))
Links <- log(c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks)))
names <- c(sapply(LS_webs,function(x) x$properties$title),sapply(non_LS_webs,function(x) x$properties$title))
LS <- c(sapply(LS_webs,function(x) x$properties$LS),rep("other",length(non_LS_webs)))
Web <- c(gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title)),
rep("other",length(non_LS_webs)))
NL_all <- data.frame(names = names,web = Web ,LS = LS, nodes = Nodes, links = Links)
#Regression
#Log(link) ~ log(Nodes)
reg_data <- NL_all[NL_all$LS != "LS",]
reg_data$nodes <- log(reg_data$nodes)
reg_data$links <- log(reg_data$links)
#Get DF with Nodes and Links
Nodes <- log(c(sapply(LS_webs,NumberOfNodes),sapply(non_LS_webs,NumberOfNodes)))
Links <- log(c(sapply(LS_webs,NumberOfTrophicLinks),sapply(non_LS_webs,NumberOfTrophicLinks)))
names <- c(sapply(LS_webs,function(x) x$properties$title),sapply(non_LS_webs,function(x) x$properties$title))
LS <- c(sapply(LS_webs,function(x) x$properties$LS),rep("other",length(non_LS_webs)))
Web <- c(gsub(" Lifestage| Taxanomic","",sapply(LS_webs,function(x) x$properties$title)),
rep("other",length(non_LS_webs)))
NL_all <- data.frame(names = names,web = Web ,LS = LS, nodes = Nodes, links = Links)
#Regression
#Log(link) ~ log(Nodes)
reg_data <- NL_all[NL_all$LS != "LS",]
reg_data$nodes <- reg_data$nodes
reg_data$links <- reg_data$links
NL_model <- lm(links~nodes,data = reg_data)
reg_data$pred <- predict(NL_model)
#plotting
#defining colour vars
cbPalette <- c("#D55E00", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
names(cbPalette) <- (unique(Web))
ggplot(NL_all,aes(x = log(nodes), y = log(links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred))
#plotting
#defining colour vars
cbPalette <- c("#D55E00", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")
names(cbPalette) <- (unique(Web))
ggplot(NL_all,aes(x = (nodes), y = (links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred))
NL_all
NL_all
View(reg_data)
ggplot(NL_all,aes(x = (nodes), y = (links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_point(data = reg_data,aes(x=nodes,y=pred))
ggplot(NL_all,aes(x = (nodes), y = (links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred))
ggplot(NL_all,aes(x = (nodes), y = (links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_point(data = reg_data,aes(x=nodes,y=pred))
ggplot(NL_all,aes(x = (nodes), y = (links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred,group = NULL))
ggplot(NL_all,aes(x = (nodes), y = (links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred,group = NULL,colour = 'black'))
ggplot(NL_all,aes(x = (nodes), y = (links), colour = web))+
geom_point()+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred,group = NULL,colour = NULL))
ggplot(NL_all,aes(x = (nodes), y = (links), colour = web))+
geom_point(size = 3)+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred,group = NULL,colour = NULL))
NvL <- ggplot(NL_all,aes(x = (nodes), y = (links), colour = web))+
geom_point(size = 3)+
geom_line(data = NL_all[NL_all$web != "other",])+
scale_color_manual(values = cbPalette)+labs(x = "Log (nodes)", y = "Log (links)")+
theme_classic() +
theme(legend.position = c(0.9,0.1),legend.justification = c(1,0),legend.title = element_blank())+
geom_line(data = reg_data,aes(x=nodes,y=pred,group = NULL,colour = NULL))
